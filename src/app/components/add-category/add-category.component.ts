import { HttpErrorResponse } from '@angular/common/http';
import { Component } from '@angular/core';
import { ProductCategory } from 'src/app/models/ProductCategory';
import { CategoryService } from 'src/app/services/category.service';
import { ProductService } from 'src/app/services/product.service'; // Updated to ProductService

@Component({
  selector: 'app-add-category',
  templateUrl: './add-category.component.html',
  styleUrls: ['./add-category.component.css']
})
export class AddCategoryComponent {

  category: ProductCategory = { // Updated to ProductCategory
    productCategoryId: '',  // This will be generated by the backend
    name: '',
    imageUrl: '',
    imageData: ''
  };
  selectedImage!: File;
  loading = true; // Added loading indicator

  constructor(private categoryService: CategoryService, private productService: ProductService) { } // Updated to ProductService

  submit() {
    this.categoryService.addCategory(this.category).subscribe({
      next: (data: ProductCategory) => { // Updated to ProductCategory
        console.log('Category added:', data);
        alert('Category added successfully'); // Show an alert message
      },
      error: (error) => {
        console.error('Error:', error);
        alert('Failed to add category'); // Show an alert message for errors
      }
    });
  }

  onFileSelected(event: any): void {
    const file = event.target.files[0];
    if (file) {
      this.selectedImage = file;
      this.productService.uploadImage(this.selectedImage).subscribe({ // Updated to ProductService
        next: (res: any) => {
          const imageUrl = res.url;  // Assuming the server response has a property named 'url'
          console.log('Image URL:', imageUrl);
          this.category.imageUrl = imageUrl;
        },
        error: (error) => {
          console.log('Error uploading image:', error);

          // Provide more detailed error information
          if (error instanceof HttpErrorResponse) {
            console.error('HTTP Error Response:', error.status, error.statusText, error.error);
          } else if (error instanceof TypeError) {
            console.error('Type Error:', error.message);
          } else {
            console.error('Unexpected error:', error);
          }

          // Handle errors here
        }
      });
    }
  }

}
